class Animal:
    def __init__(self, name, food_requirement):
        self.name = name
        self.food_requirement = food_requirement

    def move(self):
        pass

class –ú–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–µ–µ(Animal):
    def __init__(self, name, food_requirement, wool):
        super().__init__(name, food_requirement)
        self.wool = wool

    def feed_milk(self):
        return f"{self.name} –≤—Å–∫–∞—Ä–º–ª–∏–≤–∞–µ—Ç –¥–µ—Ç—ë–Ω—ã—à–µ–π –º–æ–ª–æ–∫–æ–º"

class –ü—Ç–∏—Ü–∞(Animal):
    def __init__(self, name, food_requirement, feather_color):
        super().__init__(name, food_requirement)
        self.feather_color = feather_color

    def fly(self):
        return "–ú–æ–∂–µ—Ç –ª–µ—Ç–∞—Ç—å" if self.flies else "–Ω–µ —É–º–µ–µ—Ç –ª–µ—Ç–∞—Ç—å"

class –õ–µ–≤(–ú–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–µ–µ):
    def __init__(self, name, pride_size):
        super().__init__(name, "–º—è—Å–æ", "–≥—É—Å—Ç–∞—è")
        self.pride_size = pride_size
        self.__energy = 60  # —ç—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç –∞ –º–æ–∂–µ–º –ø–æ–Ω—è—Ç—å —á—Ç–æ –æ–Ω –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –ø–æ –¥–≤—É–º –Ω–∏–∂–Ω–∏–º –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è–º

    def hunting(self):
        return f"{self.name} –æ—Ö–æ—Ç–∏—Ç—Å—è –≤ –ø—Ä–∞–π–¥–µ –∏–∑ {self.pride_size} –ª—å–≤–æ–≤"
    
    def move(self):
        return f"{self.name} –±–µ–≥–∞–µ—Ç –ø–æ –ø–æ–ª—é"

    def perform_action(self, food, action):
        if action == "–ø–æ–µ—Å—Ç—å":
            if food == self.food_requirement:
                self.__energy += 20  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —ç–Ω–µ—Ä–≥–∏—é
                return f"{self.name} –ø–æ–µ–ª –∏ —Ç–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏ {self.__energy}"
            else:
                return f"{self.name} –Ω–µ –µ—Å—Ç {food}."
    
        if action == "—Ä—ã—á–∞—Ç—å":
            if food == self.food_requirement:
                self.__energy -= 20  # –¢–µ—Ä—è–µ—Ç —ç–Ω–µ—Ä–≥–∏—é
                return f"{self.name} —Ä—ã—á–∏—Ç! –¢–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏ {self.__energy}"
            else:
                return f"{self.name} –Ω–µ —Ä—ã—á–∏—Ç! {food}"
    
        return f"–Ω–µ —Ç–µ—Ä—è–µ—Ç —ç–Ω–µ—Ä–≥–∏—é"

    def get_energy(self):
        return self.__energy  #–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ —ç–Ω–µ—Ä–≥–∏–π

class –°–ª–æ–Ω(–ú–ª–µ–∫–æ–ø–∏—Ç–∞—é—â–µ–µ):
    def __init__(self, name, herd_size):
        super().__init__(name, "–¢—Ä–∞–≤–∫–∞", "–∫–æ—Ä–æ—Ç–∫–∞—è")
        self.herd_size = herd_size

    def remembers(self):
        return f"{self.name} –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é"
    
    def move(self):
        return f"{self.name} –º–µ–¥–ª–µ–Ω–Ω–æ —à–∞–≥–∞–µ—Ç"

class –ü–æ–ø—É–≥–∞–π(–ü—Ç–∏—Ü–∞):
    def __init__(self, name):
        super().__init__(name, "—Å–µ–º–µ–Ω–∞", "—è—Ä–∫–∏–µ")
        self.flies = True
        self.pair = None

    def imitate_sound(self, sound):
        return f"{self.name} –∏–º–∏—Ç–∏—Ä—É–µ—Ç –∑–≤—É–∫: '{sound}'"
    
    def move(self):
        return f"{self.name} –ø–µ—Ä–µ–ª–µ—Ç–∞–µ—Ç —Å –≤–µ—Ç–∫–∏ –Ω–∞ –≤–µ—Ç–∫—É"

class –ü–∏–Ω–≥–≤–∏–Ω(–ü—Ç–∏—Ü–∞):
    def __init__(self, name):
        super().__init__(name, "—Ä—ã–±–æ–π", "—á—ë—Ä–Ω–æ-–±–µ–ª—ã–µ")
        self.flies = False

    def swims(self):
        return f"{self.name} –ø–ª–∞–≤–∞–µ—Ç –≤ –≤–æ–¥–µ"
    
    def move(self):
        return f"{self.name} —Ç–æ–ø–∞–µ—Ç —Ç–æ–ø —Ç–æ–ø"

if __name__ == "__main__":
    –ª–µ–≤ = –õ–µ–≤("–õ–µ–≤", 9)
    —Å–ª–æ–Ω = –°–ª–æ–Ω("–°–ª–æ–Ω", 6)
    –ø–æ–ø—É–≥–∞–π = –ü–æ–ø—É–≥–∞–π("–ü–æ–ø—É–≥–∞–π")
    –ø–∏–Ω–≥–≤–∏–Ω = –ü–∏–Ω–≥–≤–∏–Ω("–ü–∏–Ω–≥–≤–∏–Ω")
    
    print(–ª–µ–≤.hunting())
    print(—Å–ª–æ–Ω.remembers())
    print(–ø–æ–ø—É–≥–∞–π.imitate_sound("–ø–æ–ø—É–≥–∞—è"))
    print(–ø–∏–Ω–≥–≤–∏–Ω.swims())
    print(–ª–µ–≤.move())
    print(—Å–ª–æ–Ω.move())
    print(–ø–æ–ø—É–≥–∞–π.move())
    print(–ø–∏–Ω–≥–≤–∏–Ω.move())

    # –∑–∞–¥–∞–Ω–∏–µ 2. –ø—Ä–∏–º–µ—Ä –∏–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏–π
    #–ª–µ–≤ —Ä—ã—á–∏—Ç —Ç–µ—Ä–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏—é –∏ –≤–æ—Å–ø–æ–ª–Ω—è–µ—Ç –∫–∞–∫ –≤ –∏–≥—Ä–∞—Ö. –ù–æ –¥—É–º–∞–ª —è –¥–æ–ª–≥–æ —Ç–∞–∫–æ–µ —è –±—ã –Ω–µ —Å—Ç–∞–ª –¥–µ–ª–∞—Ç—å –Ω–∞ –∑–∞—á—ë—Ç–µüëç
    print(–ª–µ–≤.perform_action("–º—è—Å–æ", "—Ä—ã—á–∞—Ç—å"))
    print(–ª–µ–≤.get_energy())
    print(–ª–µ–≤.perform_action("–º—è—Å–æ", "–ø–æ–µ—Å—Ç—å"))
    print(–ª–µ–≤.get_energy())
    print(–ª–µ–≤.perform_action("—Ç—Ä–∞–≤–∫—É", "–ø–æ–µ—Å—Ç—å"))
    
    # –ó–∞–¥–∞–Ω–∏–µ 3. –£–∫–∞–∂–∏—Ç–µ, –∫–∞–∫—É—é –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–ª—é—Å—Ç—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω—ã–π –∫–æ–¥, –∏ –æ–±—ä—è—Å–Ω–∏—Ç–µ —Å—É—Ç—å —ç—Ç–æ–π –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –Ω–∞ –¥–∞–Ω–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ 
class Animal:
    def make_sound(self):
        raise NotImplementedError("Subclasses should implement this!")

class Dog(Animal):
    def make_sound(self):
        return "Woof!"

class Cat(Animal): 
    def make_sound(self): 
        return "Meow!" 

def animal_sound(animal: Animal):
    print(animal.make_sound())

    dog = Dog()
    cat = Cat()
    animal_sound(dog)
    animal_sound(cat)
# –≤ –∫–æ–¥–µ –ø–æ–ª–∏–º–æ—Ä—Ñ–∏–∑–º. –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç–∞–º —Ä–∞–∑–Ω—ã—Ö –ø–æ–¥ –∫–ª–∞—Å—Å–æ–≤ Dog –∏ Cat –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –º–µ—Ç–æ–¥ make_sound, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è —Ä–∞–∑–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–¥ –≥–∏–±–∫–∏–º –∏ —Ä–∞—Å—à–∏—Ä—è–µ–º—ã–º.

    # –ó–∞–¥–∞–Ω–∏–µ 4. –ù–∞ –∫–∞–∫–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–µ–ª—è—Ç—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø—Ä–∏–∑–Ω–∞–∫—É –∏–∑–º–µ–Ω—è–µ–º–æ—Å—Ç–∏? –ü—Ä–∏–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
# —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–µ–ª—è—Ç—Å—è –ø–æ –ø—Ä–∏–∑–Ω–∞–∫—É –∏–∑–º–µ–Ω—è–µ–º–æ—Å—Ç–∏ –∏ –Ω–µ –∏–∑–º–µ–Ω—è–µ–º–æ—Å—Ç–∏ –≤ –∏–∑–º–µ–Ω—è–µ–º—ã–µ –≤—Ö–æ–¥—è—Ç —Å–ø–∏—Å–∫–∏, —Å–ª–æ–≤–∞—Ä–∏? –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å –æ–Ω–∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—å—Å—è –≤ —Ç—É –∂–µ —è—á–µ–π–∫—É –ø–∞–º—è—Ç–∏.
# –í –Ω–µ –∏–∑–º–µ–Ω—è–µ–º—ã–µ –≤—Ö–æ–¥—è—Ç –∫–æ—Ä—Ç–µ–∂–∏, —á–∏—Å–ª–æ–≤—ã–µ, —Å—Ç—Ä–æ–∫–∏, –∏ —Ç–¥... –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –ø—Ä—è–º–æ –≤ —è—á–µ–π–∫—É –ø–∞–º—è—Ç–∏, –æ–Ω–∞ –∑–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —è—á–µ–π–∫—É –ø–∞–º—è—Ç–∏.
# —Å–ª–æ–≤–∞—Ä–∏ –Ω–µ –ø–æ–º–Ω—é –ø—Ä–æ —Å–ø–∏—Å–∫–∏ —Ç–æ—á–Ω–æ –ø–æ–º–Ω—é

    # –ó–∞–¥–∞–Ω–∏–µ 5. –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥?
def process_numbers(numbers):
    total = 0
    for number in numbers:
        if number % 2 == 0:
            total += number
        elif number % 3 == 0:
            total -= number
        return total
    
def main():
    data = [5, 12, 7, 9, 18, 4, 11]
    result = process_numbers(data)
    print("Result is:", result)

main()
# —ç—Ç–æ—Ç –∫–æ–¥ –≤—ã–≤–µ–¥–µ—Ç —á–∏—Å–ª–æ 25 –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–∑ —Å–ø–∏—Å–∫–∞ data –ø—Ä–æ–≤–µ—Ä—è—é—Ç—å—Å—è —á—ë—Ç–Ω—ã–µ –¥–µ–ª—è—Ç—å—Å—è –ª–∏ –æ–Ω–∏ –Ω–∞ 2 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞
# –ø–æ—Ç–æ–º –±–µ—Ä–µ—Ç –≤—Å–µ —á—ë—Ç–Ω—ã–µ 12+18+4 —á—Ç–æ –¥–∞—ë—Ç 34 –∏ –ø–æ—Ç–æ–º –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—å—Å—è —á–∏—Å–ª–∞ –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª—è—Ç—å—Å—è –Ω–∞ 3 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞ —ç—Ç–æ
# 9 –∏ –≤—ã—á–∏—Ç–∞–µ—Ç –∏–∑ –Ω–∞—à–µ–≥–æ —á–∏—Å–ª–∞ 34-9=25
# #–∫–æ—Ä–æ—Ç–∫–æ
# –ö–æ–¥ —Å—É–º–º–∏—Ä—É–µ—Ç —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –∏–∑ data (12, 18, 4) –¥–æ 34 –∏ –≤—ã—á–∏—Ç–∞–µ—Ç 9 (—á–∏—Å–ª–æ, –¥–µ–ª—è—â–µ–µ—Å—è –Ω–∞ 3), –≤ –∏—Ç–æ–≥–µ –ø–æ–ª—É—á–∞—è 25.
